def task_1():
    # Дана строка, содержащая русскоязычный или белорусскоязычный текст.
    # Найти количество слов, начинающихся с буквы "а".

    bel_text = ("Лес ужо жыў сваім актыўным, багатым вясновым жыццём. Стракатала сарока, чэкаў дзяцел, дрозд "
                "абзываўся ў хвойніку. Нават мурашнік, што трапіўся на вочы, і той варушыўся: выпаўзалі, "
                "грэліся на сонцы мурашкі, пакуль яшчэ надта павольныя і вялыя пасля зімовай спячкі. Цёк "
                "сок-бярозавік, і свежыя бярозавыя пні былі мокрыя, быццам іх хто знарок паабліваў вадою. А")

    ru_text = ("Сквозь мглу видно всё, но трудно разобрать цвет и очертания предметов. Всё представляется "
               "не тем, что оно есть. Едешь и вдруг видишь, впереди у самой дороги стоит силуэт, похожий "
               "на монаха; он не шевелится, ждёт и что-то держит в руках... Не разбойник ли это? Фигура "
               "приближается, растёт, вот она поравнялась с бричкой, и вы видите, что это не человек, а "
               "одинокий куст или большой камень. Такие неподвижные, кого-то поджидающие фигуры стоят на "
               "холмах, прячутся за курганами, выглядывают из бурьяна, и все они походят на людей и "
               "внушают подозрение.")

    bel_sum = bel_text.count(" а") + bel_text.count(" А")
    ru_sum = ru_text.count(" а") + ru_text.count(" А")

    print(f'Количество букв "а" в белорусскоязычном тексте = {bel_sum}')
    print(f'Количество букв "а" в русскозычном тексте = {ru_sum}')
    return


def task_2():
    # Напишите программу, в которой на основе текста, введенного пользователем,
    # создается кортеж из слов. Затем на основе этого кортежа создается
    # новый кортеж. В новый кортеж включаются равноотстоящие элементы,
    # начиная с первого (с нулевым индексом). Например, в новый кортеж
    # включаются элементы, отстоящие друг от друга на 3 позиции
    # (элементы с индексами 0, 3, 6, 9 и так далее). Расстояние между
    # элементами (приращение по индексу) вводится пользователем.

    # Каждый охотник желает знать где сидит фазан

    input_text = input("Введите какой-то текст: ")
    step = int(input("Введите шаг: "))

    words_tuple = tuple(input_text.split())
    new_tuple = tuple(words_tuple[i] for i in range(0, len(words_tuple), step))

    print(f"Исходный кортеж слов = {words_tuple}")
    print(f"Новый кортеж слов с шагом {step} = {new_tuple}")
    return


def task_3():
    # Расстояние Хэмминга между двумя строками равной длины – это количество
    # позиций, в которых символы различны. Написать небольшую программу на
    # Python для вычисления расстояния Хэмминга между двумя строками s1 и s2.
    text_1 = input("Введите текст любой длины: ")
    text_2 = input(f"Введите текст длины {len(text_1)}    : ")



    total = 0
    for i in range(len(text_1)):
        if text_1[i] != text_2[i]:
            total += 1

    print(f"Расстояние Хэмминга для строк {text_1} и {text_2} : {total}")
    return


if __name__ == '__main__':
    #task_1()
    print("~"*110)
    #task_2()
    print("~"*110)
    task_3()